Offboard control
=======

OFFBOARD control means that we would like to be able to send (usually) high-level control commands to *Pixhawk*. For example, sending position, velocity , or acceleration set-points. Then, *Pixhawk* will receive those set-points and perform the neccessary low-level control (e.g. attitude/engines control).

In general, sending high-level commands is done off-board (board here refers to *Pixhawk*). In other words, an offboard computer is usually used to execute some code to take some high-level decisions. Then, high-level decisions are translated to set-points (e.g. position set-points) which, then, are sent to the *Pixhawk* to be executed. For example, an offboard computer can be used to do run some image processing algorithm for object tracking. The output of the algorithm is position set-points to tell *Pixhawk* to move to the direction of the tracked object.

In general, executing such offboard tasks are not feasible due to the limited resources on *Pixhawk*. Therefore, more powerful computers are used.

Offboard computers can be single board computer (or SBC in brief), e.g. `ODROID XU4 <http://www.hardkernel.com/main/products/prdt_info.php?g_code=G143452239825>`_. Or, it can be a fully loaded workstaton, desktop, or laptop.

In summary, *Pixhawk* is used as a flight controllers. Whereas, offboard controller are used to execute more sophisticated tasks.

In this guide, we will learn how to do offboard control from an SBC (ODROID XU4), and from desktop/laptop that runs *MATLAB*.



Off-board control from ODROID XU4
-----


Intro
^^^^^^

OFFBOARD control means that the autopilot controller is commanded by some high-level controller e.g. companion computer (like *ODROID* or *Raspberry Pi*). We are going to work with PX4 autopilot. PX4 accepts the following high-level commands

* Position setpoints
* Velocity setpoints
* Attitude (and attitude rates) + thrust setpoints

There are a number of ways to send such setpoints to the flight controller. In all ways, specific MAVLink messages are used for those setpoints.

The way that is explained here is by using `MAVROS <http://wiki.ros.org/mavros>`_ package.

.. attention:: 

	You need to be familiar with ROS basics in order to complete this tutorial.


Steps
^^^^^

The framework works as follows

* You will set an RC switch on your RC controller to activate/deactivate OFFBOARD mode

* Once OFFBOARD mode is activated, you should already be sending setpoints at least two times per second *2Hz*

* You will write a Python node that publishes setpoints to certain ``MAVROS`` topics at least at *2Hz*

* ``MAVROS`` will take the published setpoints and send the appropriately to the flight controller


Setting RC switch for OFFBOARD Mode
^^^^^^^^

Writing Setpoints Python Node
^^^^^^^


Off-board control from MATLAB
------


Requirements:

* *MatMav* toolbox: to run offboard control from *MATLAB*


.. note::

	Find MATMAV tutorials `here <https://mzahana.gitbooks.io/matmav-guide/content/>`_.
